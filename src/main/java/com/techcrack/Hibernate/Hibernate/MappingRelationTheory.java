package com.techcrack.Hibernate.Hibernate;

//Classes Importing
import org.hibernate.cfg.Configuration;
import java.util.List;
import java.util.ArrayList;

//Interface
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import org.hibernate.Transaction;

public class MappingRelationTheory {

	// Driver Mode
	public static void main(String[] args) {
		hibernate();
	}

	// Actual implementation of ORM
	private static void hibernate() {
//		Laptop laptop=new Laptop();
//		laptop.setName("tecno");
//		laptop.setId(19);
//		
//		Student stud=new Student();
//		stud.setAge(20);
//		stud.setId(1);
//		stud.setName("DharaniKavin");
//		stud.setLap(laptop);
		
//		//Updating object details 
//		Student s=new Student();
//		s.setAge(40);
//		s.setId(1943);
//		s.setName("KavinDharani");
//		
//		Student ss=new Student();
//		ss.setAge(43);
//		ss.setName("adithya");
//		ss.setId(7);
//		
//		List<Student> list=new ArrayList<Student>();
//		list.add(s);
//		list.add(ss);
//		//Laptop details
//		Laptop l=new Laptop();
//		l.setId(1);
//		l.setName("Technooo");
//		l.setStud(list);
//		
//		Laptop lapp=new Laptop();
//		lapp.setId(2);
//		lapp.setName("IOS");
		
		//List<Laptop> listLap=new ArrayList<>();
		//listLap.add(lapp);
		//listLap.add(l);
		
		
		//ss.setLap(listLap);
		
		//Config the XML OR Annotaions
		Configuration config=new Configuration();
		config.configure().addAnnotatedClass(Laptop.class).addAnnotatedClass(Student.class);
		  
		//Connecting the data base based on meta dataa generated by the Configuration class
		SessionFactory sf=config.buildSessionFactory();
		
		//storng the data on session object 
		Session session=sf.openSession();
		
		//Begin the transaction
		Transaction trans=session.beginTransaction();
		 
		//Saving object
//		session.persist(laptop);
//		session.persist(stud);
		
		//Student stud1=(Student)session.get(Student.class,1);
		//System.out.println(stud1);
		
		
		//session.persist(s);
		//session.persist(l);
		
		//Laptop lap=(Laptop)session.get(Laptop.class,1);
		
		//System.out.println(lap);
		
		
		//One To many laptop top student
		//session.persist(l);
		//session.persist(lapp);
		//session.persist(ss);
		//trans.commit();
	    manyToOne(session,trans);
		 
	}
	
	
	private static void manyToOne(Session session,Transaction trans) {
		Laptop l1=new Laptop();
		l1.setName("techno");
		l1.setId(1);
		
		Laptop l2=new Laptop();
		l2.setName("HP");
		l2.setId(2);
		
		Laptop l3=new Laptop();
		l3.setName("dell");
		l3.setId(3);
		
		Laptop l4=new Laptop();
		l4.setName("Lenovo");
		l4.setId(4);
		
 		Student s1=new Student();
		s1.setAge(1);
		s1.setId(1);
		s1.setName("Kavin");
		//s1.setLap(l1);
		
		Student s2=new Student();
		s2.setAge(2);
		s2.setId(2);
		s2.setName("DharaniKavin");
		//s2.setLap(l2);
		
		Student s3=new Student();
		s3.setAge(3);
		s3.setId(3);
		s3.setName("Dharani" );
		//s3.setLap(l3);
		
		Student s4=new Student();
		s4.setAge(4);
		s4.setId(4);
		s4.setName("Dhain");
		//s4.setLap(l4);
		List<Student> list1=new ArrayList<>();
		list1.add(s1);
		list1.add(s2);
		l1.setStud(list1);
		List<Student> list2=new ArrayList<>();
		list2.add(s1);
		list2.add(s4);
		l2.setStud(list2);
////		List<Student> list3=new ArrayList<>();
////		list3.add(s1);
////		list3.add(s2);
////		l3.setStud(list3);
////		List<Student> list4=new ArrayList<>();
////		list4.add(s1);
////		list4.add(s2);
//		l4.setStud(list4);
//		session.persist(s1);
//		session.persist(s2);
//		session.persist(l1);
//		
		//l1.setStud(list);
//		l1.getStud().add(s1);
//		l1.getStud().add(s2);
//		
//		l2.getStud().add(s2);
//		l2.getStud().add(s3);
//		
//		l3.getStud().add(s4);
//		l3.getStud().add(s1);
//		
//		l4.getStud().add(s2);
// 		l4.getStud().add(s3);		
		session.persist(s1);
		session.persist(s2);
		session.persist(s3);
		session.persist(s4);
		session.persist(l1);
		session.persist(l2);
		//session.persist(l3);
    	//session.persist(l4);
	
		trans.commit();
	}
}
